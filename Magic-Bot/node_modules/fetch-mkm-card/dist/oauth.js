"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.oauth = void 0;
var crypto = require("crypto");
function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
        .toString(16)
        .substring(1);
}
function sign(url, params, keys) {
    var paramsStr = Object.keys(params)
        // @ts-ignore - type 'string' can't be used to index hurr durrrr
        .map(function (key) { return key + "=" + params[key]; })
        .join("&");
    var str = "GET&" + encodeURIComponent(url) + "&" + encodeURIComponent(paramsStr);
    var hmac = crypto.createHmac("sha1", keys.secret);
    hmac.update(str);
    return hmac.digest("base64");
}
function oauth(url, keys) {
    var params = {
        oauth_consumer_key: keys.appToken,
        oauth_nonce: "" + s4() + s4() + s4(),
        oauth_signature_method: "HMAC-SHA1",
        oauth_timestamp: "" + Math.round(Date.now() / 1000),
        oauth_token: keys.accessToken,
        oauth_version: "1.0",
    };
    var signature = sign(url, params, keys);
    var oauthParams = Object.keys(params)
        // @ts-ignore - type 'string' can't be uSeD tO InDEx :ppPppP
        .map(function (key) { return key + "=\"" + params[key] + "\""; })
        .join(", ");
    return "OAuth realm=\"" + url + "\", " + oauthParams + ", oauth_signature=\"" + signature + "\"";
}
exports.oauth = oauth;
